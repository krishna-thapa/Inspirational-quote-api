version: '3.3'

services:
  #Get the inspirational api from the dockerhub account
#  inspirationa-quote-api:
#    image: inspirational-quote-api:v0.1
#    ports:
#    - 9000:9000
#    environment:
#      - PROJECT_ENV
#      - POSTGRES_DB
#      - POSTGRES_USER
#      - POSTGRES_PASSWORD
#      - POSTGRES_HOST
#      - ES_HOST
#      - REDIS_HOST
#    depends_on:
#      - elasticsearch
#      - redis
#      - postgres
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
    environment:
      discovery.type: single-node
      network.host: 0.0.0.0
      path.repo: /tmp/elastic4s
    ports:
      - 9200:9200
    volumes:
      - "./conf/docker/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "es-data:/usr/share/elasticsearch/data:rw"
    restart: unless-stopped
  redis:
    image: redis:latest
    ports:
      - 6379:6379
    volumes:
      - "./conf/docker/redis.conf:/redis.conf"
      - "redis-data:/data:rw"
    command: >
      bash -c "redis-server --appendonly yes
      && redis-server /redis.conf"
    restart: always
  postgres:
    image: postgres:latest
    container_name: pg-docker
    restart: always
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA
    ports:
      - 5432:5432
    volumes:
      - "./conf/docker/postgres.conf:/etc/postgresql/postgresql.conf"
      # for debian system use: /var/lib/postgresql/data/:/var/lib/postgresql/data/pgdata
      # for mac OS: ./pgdata/:/var/lib/postgresql/data/pgdata and copy the CSV files under pgdata
      # which will be under the project level directory, not the root level
      - "./pgdata/:/var/lib/postgresql/data/pgdata"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
volumes:
  es-data:
    driver: local
  redis-data:
    driver: local